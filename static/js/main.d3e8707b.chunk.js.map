{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setCurrentTodo","currentTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onChangeSelect","onChangeSearchValue","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","resetTodo","useState","user","setUser","useMemo","userId","item","href","email","name","App","setTodos","searchValue","setSearchValue","selectValue","setSelectValue","useEffect","items","todoFilterList","result","filter","replace","toLowerCase","includes","trim","undefined","todoFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3e8707b.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  setCurrentTodo: (todo: Todo) => void,\n  currentTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setCurrentTodo,\n  currentTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${completed ? 'success' : 'danger'}`}>{title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setCurrentTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far fa-eye${todo === currentTodo ? '-slash' : ''}`} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onChangeSelect: (value: string) => void,\n  value: string,\n  onChangeSearchValue: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeSelect,\n  onChangeSearchValue,\n  value,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(e) => onChangeSelect(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={(e) => onChangeSearchValue(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {value && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChangeSearchValue('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useMemo, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  currentTodo: Todo | null\n  resetTodo: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo, resetTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useMemo(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId).then((item) => setUser(item));\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => resetTodo()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={user?.email}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>();\n  const [searchValue, setSearchValue] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n\n  const todoFilter = (): Todo[] | void => {\n    const result = selectValue === 'all'\n      ? todos\n      : todos?.filter(todo => {\n        return selectValue === 'active' ? !todo.completed : todo.completed;\n      });\n\n    return result ? result.filter(todo => todo.title.replace(' ', '').toLowerCase()\n      .includes(searchValue.toLowerCase().trim()))\n      : undefined;\n  };\n\n  useEffect(() => {\n    getTodos().then((items: Todo[]) => setTodos(items));\n  }, []);\n\n  const todoFilterList = todoFilter();\n  const onChangeSelect = (value: string) => setSelectValue(value);\n  const onChangeSearchValue = (value: string) => setSearchValue(value);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeSelect={onChangeSelect}\n                value={searchValue}\n                onChangeSearchValue={onChangeSearchValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todoFilterList\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todoFilterList}\n                    setCurrentTodo={setCurrentTodo}\n                    currentTodo={currentTodo}\n                  />\n                ) }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo\n      && (\n        <TodoModal\n          currentTodo={currentTodo}\n          resetTodo={() => setCurrentTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}